name: Set up dependencies
description: Set up dependencies for the project
runs:
  using: composite
  steps:
    - name: Install dependencies
      shell: bash
      run: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y clang-tools ca-certificates python3-minimal python3-whichcraft nlohmann-json3-dev libsqlite3-dev libev-dev pkgconf libtls-dev libssl-dev libstdc++-13-dev ccache

    - name: Install newer Clang
      shell: bash
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x ./llvm.sh
        sudo ./llvm.sh 18
        sudo apt-get install -y clang-tools-18

    - name: Set up ccache
      uses: hendrikmuhs/ccache-action@ed74d11c0b343532753ecead8a951bb09bb34bc9 # v1.2.14

    - name: Set package versions
      shell: bash
      run: |
        echo "LIBADA_VERSION=${LIBADA_VERSION}" >> "${GITHUB_ENV}"
        echo "LLHTTP_VERSION=${LLHTTP_VERSION}" >> "${GITHUB_ENV}"
        echo "NANODBC_VERSION=${NANODBC_VERSION}" >> "${GITHUB_ENV}"
        echo "LIBRESSL_VERSION=${LIBRESSL_VERSION}" >> "${GITHUB_ENV}"
      env:
        # renovate: datasource=github-tags depName=ada-url/ada
        LIBADA_VERSION: v2.9.2
        # renovate: datasource=github-tags depName=nodejs/llhttp
        LLHTTP_VERSION: v9.2.1
        # renovate: datasource=github-tags depName=nanodbc/nanodbc
        NANODBC_VERSION: v2.14.0
        # renovate: datasource=github-releases depName=libressl/portable
        LIBRESSL_VERSION: v4.0.0

    - name: Install libada
      shell: bash
      run: |
        git clone https://github.com/ada-url/ada.git --depth 1 -b "${LIBADA_VERSION}"
        cd ada
        cmake -B build -DCMAKE_BUILD_TYPE=MinSizeRel -DADA_TOOLS=off -DADA_TESTING=off -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        cmake --build build
        sudo cmake --install build

    - name: Install llhttp
      shell: bash
      run: |
        wget -q -O - "https://github.com/nodejs/llhttp/archive/refs/tags/release/${LLHTTP_VERSION}.tar.gz" | tar xzf -
        cd llhttp-release-v*
        cmake -B build -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_SHARED_LIBS=OFF -DBUILD_STATIC_LIBS=ON -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        cmake --build build
        sudo cmake --install build

    - name: Install nanodbc
      shell: bash
      run: |
        git clone https://github.com/nanodbc/nanodbc.git --depth 1 -b "${NANODBC_VERSION}"
        cd nanodbc
        CXX=g++ cmake -B build -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_SHARED_LIBS=OFF -DBUILD_STATIC_LIBS=ON -DNANODBC_DISABLE_TESTS=ON -DNANODBC_DISABLE_EXAMPLES=ON -DNANODBC_DISABLE_LIBCXX=ON -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        cmake --build build
        sudo cmake --install build

    - name: Install libressl
      shell: bash
      run: |
        wget -q -O - https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${LIBRESSL_VERSION#v}.tar.gz | tar xzf -
        cd libressl-*
        cmake -B build -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_SHARED_LIBS=OFF -DLIBRESSL_APPS=OFF -DLIBRESSL_TESTS=OFF -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        cmake --build build
        sudo cmake --install build
